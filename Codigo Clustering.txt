import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans

# Asegurarse de que 'dataset' esté definido correctamente en Power BI
dataset = dataset.dropna()

# Crear un DataFrame con las variables específicas
data = {
    'per_genero': dataset['per_genero_codigo'].tolist(),
    'Edad': dataset['Edad'].tolist(),
    'per_estrato': dataset['per_estrato'].tolist(),
    'dee_nombre': dataset['dee_nombre_codigo'].tolist(),
    'ise_ingreso_mensual_categoria': dataset['ise_ingreso_mensual_categoria_codigo'].tolist(),
    'PorcentajeCreditos': dataset['PorcentajeCreditos'].tolist(),
    'dependencia_nombre': dataset['dependencia_nombre_codigo'].tolist()
}

# Crear DataFrame con las listas convertidas
df = pd.DataFrame(data)

# Convertir variables categóricas a numéricas utilizando un mapeo
df['per_genero'] = df['per_genero'].astype('category').cat.codes
df['dee_nombre'] = df['dee_nombre'].astype('category').cat.codes
df['ise_ingreso_mensual_categoria'] = df['ise_ingreso_mensual_categoria'].astype('category').cat.codes
#df['dependencia_nombre'] = df['dependencia_nombre'].astype('category').cat.codes

# Seleccionar columnas para clustering
columns_for_clustering = ['per_genero', 'Edad', 'per_estrato', 'dee_nombre', 'ise_ingreso_mensual_categoria', 'PorcentajeCreditos', 'dependencia_nombre']

# Normalizar datos
scaler = StandardScaler()
data_scaled = scaler.fit_transform(df[columns_for_clustering])

# Aplicar K-means para 3 clusters
kmeans = KMeans(n_clusters=2, random_state=42)
kmeans.fit(data_scaled)

# Añadir resultados del clustering al dataset original
df['cluster'] = kmeans.labels_

# Mostrar la distribución de los clusters en todas las variables
sns.pairplot(df, hue='cluster', diag_kind='hist', palette='Set1')

# Guardar el gráfico para Power BI (opcional)
plt.savefig('cluster_pairplot.png')

# Mostrar el gráfico en Python (opcional)
plt.show()

# Devolver el DataFrame con los clusters
result = df
